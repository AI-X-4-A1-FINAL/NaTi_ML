name: Deploy FastAPI to AWS EC2

on:
  push:
    branches:
      - dev
  pull_request:
    types:
      - closed
    branches:
      - dev
  workflow_dispatch:

jobs:
  deploy_to_ec2:
    runs-on: ubuntu-latest

    steps:
      # 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_EC2_USERNAME }}
          password: ${{ secrets.DOCKER_EC2_PASSWORD }}

      # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image to Docker Hub
        run: |
          docker build --build-arg CORS_ORIGINS=${{ secrets.CORS_ORIGINS }} \
                       --build-arg OPENAI_KEY=${{ secrets.OPENAI_KEY }} \
                       --build-arg AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \  
                       --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \  
                       --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \  
                       --build-arg BUCKET_NAME=${{ secrets.BUCKET_NAME }} \  
                       -t narrativa_ml:latest .
          docker tag narrativa_ml:latest ${{ secrets.DOCKER_EC2_USERNAME }}/narrativa_ml:latest
          docker push ${{ secrets.DOCKER_EC2_USERNAME }}/narrativa_ml:latest

      # SSH 키 설정
      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem

      # Docker 컨테이너를 EC2에 배포
      - name: Deploy Docker container to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          set +x

          # 기존 컨테이너 강제 중지 및 제거
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "
            container_id=\$(docker ps -aq --filter 'name=narrativa_ml')
            if [ -n \"\$container_id\" ]; then
              echo 'Stopping and removing the existing container...'
              docker stop \$container_id || true
              docker rm -f \$container_id || true
            fi
          "

          # Docker Hub에서 최신 이미지 가져오기
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "docker login -u ${{ secrets.DOCKER_EC2_USERNAME }} -p ${{ secrets.DOCKER_EC2_PASSWORD }}"

          # 최신 이미지 다운로드
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "docker pull ${{ secrets.DOCKER_EC2_USERNAME }}/narrativa_ml:latest"

          # 기존 이미지 삭제 (필요 시 수행)
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "docker images --filter 'dangling=true' -q | xargs -r docker rmi || true"

          # 새로운 컨테이너 실행
          ssh -i "ec2_key.pem" -o "StrictHostKeyChecking=no" $USER@$HOST "
            echo 'Running new container...'
            docker run -d -p 8050:8050 --name narrativa_ml\$(date +%s) \
              -e CORS_ORIGINS=${{ secrets.CORS_ORIGINS }} \
              -e OPENAI_KEY=${{ secrets.OPENAI_KEY }} \
              -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \  
              -e AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \  
              -e AWS_REGION=${{ secrets.AWS_REGION }} \  
              -e BUCKET_NAME=${{ secrets.BUCKET_NAME }} \  
              ${{ secrets.DOCKER_EC2_USERNAME }}/narrativa_ml:latest
          "
